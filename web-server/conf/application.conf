# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"
play.http.secret.key=${?APPLICATION_SECRET}


# The application languages
# ~~~~~
application.langs="en"

# Error handlers
# ~~~~~
//play.http.errorHandler = "sensala.web.ErrorHandler"

# Assets
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Modules
# ~~~~~
//play.modules.enabled += "sensala.web.Module"

# Security
# ~~~~~
play.filters.headers {
  contentSecurityPolicy = null
}

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["167.99.88.190", "localhost", "codesearch.aelve.com"]
  allowed = ${?ALLOWED_HOSTS}
}

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.
#
http.port=80
