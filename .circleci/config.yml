# Taken from https://github.com/code-star/circleci-scala-sbt-git

workflows:
  version: 2
  build_and_push_and_deploy:
    jobs:
      - build
      - build_and_publish_docker_images:
          requires:
            - build
      - deploy-to-swarm:
          requires:
            - build_and_publish_docker_images

version: 2
jobs:
  build:
    working_directory: ~/codesearch
    docker:
      - image: codestar/circleci-scala-sbt-git:scala-2.12.6-sbt-1.1.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - codesearch-{{ checksum "project/Builder.scala" }}-{{ checksum "build.sbt" }}
            - codesearch
      - run:
          command:
            sbt compile
      - run:
          command:
            sbt core/assembly
      - run:
          command:
            sbt web-server/assembly
      - run:
          command: |
            sbt scalafmt exit
            git diff --exit-code
      - save_cache:
          key: codesearch-{{ checksum "project/Builder.scala" }}-{{ checksum "build.sbt" }}
          paths:
            - target/resolution-cache
            - target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.iv2/cache
            - ~/.m2
      - save_cache:
          # Changing this to a different key is the only way to remove old
          # dependencies from the cache and/or generate a more up-to-date
          # cache
          key: codesearch
          paths:
            - ~/.sbt
            - ~/.iv2/cache
            - ~/.m2
      - persist_to_workspace:
          root: ~/codesearch
          paths:
            - .dockerignore
            - docker
            - scripts
            - Makefile
            - codesearch-core.jar
            - codesearch-server.jar

  build_and_publish_docker_images:
    working_directory: ~/codesearch
    machine:
      docker_layer_caching: true
    steps:
      - attach_workspace:
          at: ~/codesearch
      - run: docker login quay.io -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - run:
          name: Running build core image
          command: make build-docker-core "branch=${CIRCLE_BRANCH}"
      - run:
          name: Running build web-server image
          command: make build-docker-web-server "branch=${CIRCLE_BRANCH}"
      - run:
          name: Running push core image
          command: make push-docker-core "branch=${CIRCLE_BRANCH}"
      - run:
          name: Running push web-server image
          command: make push-docker-web-server "branch=${CIRCLE_BRANCH}"

  deploy-to-swarm:
    working_directory: ~/codesearch
    machine: true
    environment:
      DOCKER_CERT_PATH: "./certs"
    steps:
      - attach_workspace:
          at: ~/codesearch
      - run: docker login quay.io -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - run: mkdir -p $DOCKER_CERT_PATH
      - run: echo "$TLSCACERT" > $DOCKER_CERT_PATH/ca.pem
      - run: echo "$TLSCERT" > $DOCKER_CERT_PATH/cert.pem
      - run: echo "$TLSKEY" > $DOCKER_CERT_PATH/key.pem
      - run: docker -H=$STAGING_HOST:2376 --tlsverify --tlscacert=$DOCKER_CERT_PATH/ca.pem --tlscert=$DOCKER_CERT_PATH/cert.pem --tlskey=$DOCKER_CERT_PATH/key.pem service ls
      - run:
          name: Deploy to remote swarm
          command: SECRET_KEY=$SECRET_KEY SERVER_PORT=$SERVER_PORT docker -H=$STAGING_HOST:2376 --tlsverify --tlscacert=$DOCKER_CERT_PATH/ca.pem --tlscert=$DOCKER_CERT_PATH/cert.pem --tlskey=$DOCKER_CERT_PATH/key.pem stack deploy --with-registry-auth -c docker/docker-stack-compose.yml codesearch
